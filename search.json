{"Type%20Definitions.html#/c:MMMNetworkConditioner.h@T@MMMNetworkConditionerBlock":{"name":"MMMNetworkConditionerBlock","abstract":"<p>Undocumented</p>"},"Protocols/MMMNetworkCondition.html#/c:objc(pl)MMMNetworkCondition(im)delayForEstimatedResponseLength:context:":{"name":"-delayForEstimatedResponseLength:context:","abstract":"<p>Undocumented</p>","parent_name":"MMMNetworkCondition"},"Protocols/MMMNetworkCondition.html#/c:objc(pl)MMMNetworkCondition(im)shouldFailInContext:":{"name":"-shouldFailInContext:","abstract":"<p>Undocumented</p>","parent_name":"MMMNetworkCondition"},"Protocols/MMMNetworkCondition.html":{"name":"MMMNetworkCondition","abstract":"<p>Protocol for the actual delay/error model.</p>"},"Classes/MMMSimpleNetworkCondition.html#/c:objc(cs)MMMSimpleNetworkCondition(im)initWithMinDelay:maxDelay:failureRate:":{"name":"-initWithMinDelay:maxDelay:failureRate:","abstract":"<p>Undocumented</p>","parent_name":"MMMSimpleNetworkCondition"},"Classes/MMMSimpleNetworkCondition.html#/c:objc(cs)MMMSimpleNetworkCondition(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MMMSimpleNetworkCondition"},"Classes/MMMNetworkConditioner.html#/c:objc(cs)MMMNetworkConditioner(cm)shared":{"name":"+shared","abstract":"<p>Undocumented</p>","parent_name":"MMMNetworkConditioner"},"Classes/MMMNetworkConditioner.html#/c:objc(cs)MMMNetworkConditioner(im)initWithCondition:":{"name":"-initWithCondition:","abstract":"<p>If condition is nil, then simulation will be disabled.</p>","parent_name":"MMMNetworkConditioner"},"Classes/MMMNetworkConditioner.html#/c:objc(cs)MMMNetworkConditioner(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MMMNetworkConditioner"},"Classes/MMMNetworkConditioner.html#/c:objc(cs)MMMNetworkConditioner(im)conditionBlock:inContext:estimatedResponseLength:":{"name":"-conditionBlock:inContext:estimatedResponseLength:","abstract":"<p>If simulation of errors and delays is turned on for this app, then the block will be called on the main queue","parent_name":"MMMNetworkConditioner"},"Classes/MMMWeakProxy.html#/c:objc(cs)MMMWeakProxy(cm)proxyWithTarget:":{"name":"+proxyWithTarget:","abstract":"<p>Undocumented</p>","parent_name":"MMMWeakProxy"},"Classes/MMMWeakProxy.html#/c:objc(cs)MMMWeakProxy(im)initWithTarget:":{"name":"-initWithTarget:","abstract":"<p>Undocumented</p>","parent_name":"MMMWeakProxy"},"Classes/MMMWeakProxy.html#/c:objc(cs)MMMWeakProxy(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MMMWeakProxy"},"Classes/MMMWeakProxy.html":{"name":"MMMWeakProxy","abstract":"<p>This is to be able to cut strong references, such as the ones NSTimer creates to its targets."},"Classes/MMMNetworkConditioner.html":{"name":"MMMNetworkConditioner","abstract":"<p>This is to help with network-related simulated delays and failures.</p>"},"Classes/MMMSimpleNetworkCondition.html":{"name":"MMMSimpleNetworkCondition","abstract":"<p>A network condition model with the given faulure rate and delays uniformely distributed within the given range.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Type%20Definitions.html":{"name":"Type Definitions","abstract":"<p>The following type definitions are available globally.</p>"}}